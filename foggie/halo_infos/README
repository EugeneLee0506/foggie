Documentation for halo info files
---------------------------------
Author: Cassi
Last modified: 1/25/21

This document describes the different file types that can be found in the halo_infos folder
and how to use them.


The halo_infos folder is first broken into subfolders by halo ID, then by run type. For example, the
halo ID for Tempest is 008508, and the run type could be nref11c_nref9f.


halo_c_v
--------
Description:
These files are ASCII data files where the columns are:
redshift        snapshot name       xc      yc      zc      xv      yv      zv
where "redshift" gives the redshift of the snapshot, "snapshot name" is the file name of the
snapshot (e.g. RD0036, DD1534), "xc, yc, zc" gives the x, y, z coordinates of the center of the halo
as the peak of the DM density distribution, as returned by get_halo_center.py, and "vx, vy, vz" are
the x, y, z velocities of the center of the halo, as determined by taking a mass-weighted average
of the gas velocity in a sphere of radius 10 kpc centered on the halo center.

Units:
xc, yc, zc are given in physical kpc. xv, yv, zv are given in km/s.

Exists for:
8508/nref11c_nref9f snapshots DD0044-DD2427, RD0012-RD0042
8508/nref11n_nref10f snapshots DD0044-DD1630
5016/nref11c_nref9f snapshots DD0250-DD2520, RD0020-RD0042
5036/nref11c_nref9f snapshots DD0272-DD2520, RD0015-RD0042
4123/nref11c_nref9f snapshots DD0355-DD1799, RD0016-RD0034
2392/nref11c_nref9f snapshots DD0511-DD1499, RD0019-RD0031
2878/nref11c_nref9f snapshots DD0398-DD0799, RD0016-RD0022

Created by:
utils/get_halo_c_v_parallel.py

Author:
Cassi


masses_z-gtr-2.hdf5 and masses_z-less-2.hdf5
--------------------------------------------
Description:
These files are data files (that can be read with astropy.table) that give profiles of mass enclosed
versus radius for a number of different snapshots for a given run, all saved in the same file.
The columns are:
redshift   snapshot   radius   total_mass   dm_mass   stars_mass   young_stars_mass   old_stars_mass   gas_mass
gas_metal_mass   gas_H_mass   gas_HI_mass   gas_HII_mass   gas_CII_mass  gas_CIII_mass   gas_CIV_mass   gas_OVI_mass
gas_OVII_mass   gas_MgII_mass   gas_SiII_mass   gas_SiIII_mass   gas_SiIV_mass   gas_NeVIII_mass

where "redshift" gives the redshift of the snapshot, "snapshot" gives the name of the snapshot
(e.g. RD0036, DD1534), "radius" gives the radius at which the mass enclosed within that radius is
calculated, "total_mass" gives the mass of dark matter, stars, and gas enclosed within the
corresponding radius, "dm_mass" gives the mass of just dark matter enclosed within the corresponding
radius, "stars_mass" gives the mass of just stars enclosed within the corresponding radius,
"young_stars_mass" is the mass of star particles with ages < 10^7 yrs, "old_stars_mass" is the mass
of star particles with ages > 10^7 yrs,
"gas_mass" gives the mass of just gas, and "gas_metal_mass" gives the mass of metals in the gas phase
enclosed within the corresponding radius. The rest of the gas masses
after that give the mass of several ions in the gas. There are 250 radii
at which the enclosed mass is calculated for each snapshot, from 0.01*refine_width out to
5*refine_width, log-spaced.

The files are split into snapshots with redshift greater than and less than 2, to avoid github's
file size limit. This division happens between DD0486 and DD0487 and between RD0020 and RD0021.

Units:
"radius" is given in physical kpc. All masses are given in Msun.

Exists for:
8508/nref11c_nref9f snapshots DD0044-DD2427, RD0012-RD0042
5016/nref11c_nref9f snapshots DD0250-DD2520, RD0020-RD0042
5036/nref11c_nref9f snapshots DD0272-DD2520, RD0015-RD0042
4123/nref11c_nref9f snapshots DD0355-DD1599, RD0016-RD0029
2392/nref11c_nref9f snapshots DD0511-DD1499, RD0019-RD0031
2878/nref11c_nref9f snapshots DD0398-DD0799, RD0016-RD0022

Created by:
utils/get_mass_profile.py, which will output one "snapshot_masses.hdf5" per snapshot that can
later be combined. The masses.hdf5 file is the combined version.

How to use:
from astropy.table import Table
masses = Table.read('/path/to/table/masses_z-less-2.hdf5', path='all_data')

To plot the mass enclosed profiles for a specific snapshot, e.g. RD0042:
import matplotlib.pyplot as plt
plt.plot(masses['radius'][masses['snapshot']=='RD0042'], masses['total_mass'][masses['snapshot']=='RD0042'])

Author:
Cassi



sfr
---
Description:
This file gives the star formation rate within a 20 kpc sphere centered on the halo center for
each snapshot. It is an ascii file, where the columns are:
snapshot    redshift    SFR (Msun/yr)

Units:
SFR is given in Msun/yr

Exists for:
8508/nref11c_nref9f snapshots DD0044-DD2427, RD0012-RD0042
5016/nref11c_nref9f snapshots DD0250-DD2520, RD0020-RD0042
5036/nref11c_nref9f snapshots DD0272-DD2520, RD0015-RD0042
4123/nref11c_nref9f snapshots DD0355-DD1599, RD0016-RD0029
2392/nref11c_nref9f snapshots DD0511-DD1499, RD0019-RD0031
2878/nref11c_nref9f snapshots DD0398-DD0799, RD0016-RD0022

Created by:
utils/get_mass_profile.py, which will output one "snapshot_masses.hdf5" per snapshot that can later
be combined and extract the SFR column. The sfr file is a combined file with only the snapshot, redshift,
and sfr columns for all snapshots, using only the sfr within a 20 kpc sphere.

How to use:
import numpy as np
snapshots, redshifts, SFRs = np.loadtxt('/path/to/table/sfr', unpack=True, usecols=[0,1,2], skiprows=1)

To plot the SFR vs redshift:
import matplotlib.pyplot as plt
plt.plot(redshifts, SFRs)

Author:
Cassi



satellites.hdf5
---------------
Description:
These files are data files (that can be read with astropy.table) that give the locations of each
satellite within 5*refine_width from the center of the halo at each snapshot, all saved in the same
file. The columns are:
snap        sat_id      sat_x       sat_y       sat_z
where "snap" gives the name of the snapshot (e.g. RD0036, DD1534), "sat_id" gives the number
(1 through however many satellites there are) to identify the satellite (NOTE: ID NUMBERS MAY
NOT BE CONSISTENT ACROSS SNAPSHOTS), "sat_x, sat_y, sat_z" are the coordinates of the center of the
satellite. Note that coordinates are *not* relative to the halo center, they are just the box
coordinates.

Units:
"sat_x, sat_y, sat_z" are all given in physical kpc.

Exists for:
8508/nref11c_nref9f snapshots DD0046-DD2427, RD0013-RD0042
5016/nref11c_nref9f snapshots DD0250-DD2520, RD0020-RD0042
5036/nref11c_nref9f snapshots DD0272-DD2520, RD0015-RD0042
4123/nref11c_nref9f snapshots DD0355-DD1599, RD0016-RD0029
2392/nref11c_nref9f snapshots DD0511-DD1499, RD0019-RD0031

Created by:
utils/get_satellite_positions.py, which will output one "snapshot_satellites.dat" ASCII file per
snapshot that can later be combined. The satellites.hdf5 file is the combined version.

Author:
Cassi, but using Raymond's satellite finder code.





rvir_masses.hdf5
---------------
Description:
An hdf5 catalog listing the virial radius and masses for each snapshot. Can be read with astropy.table, in the same way as the masses_z_* catalogs above.

The columns are:
redshift   snapshot   radius   total_mass   dm_mass   stars_mass   young_stars_mass   old_stars_mass   gas_mass
gas_metal_mass   gas_H_mass   gas_HI_mass   gas_HII_mass   gas_CII_mass  gas_CIII_mass   gas_CIV_mass   gas_OVI_mass
gas_OVII_mass   gas_MgII_mass   gas_SiII_mass   gas_SiIII_mass   gas_SiIV_mass   gas_NeVIII_mass


where radius is the virial radius at the given snapshot and the masses are the masses are of the halo inside rvir. The star particle types are defined as outlined in "masses_z-gtr-2.hdf5 and masses_z-less-2.hdf5" above.

Units:
"radius" is given in physical kpc. All masses are given in Msun.

Exists for:
8508/nref11c_nref9f snapshots DD0044-DD2427, RD0012-RD0042
5016/nref11c_nref9f snapshots DD0250-DD2520, RD0020-RD0042
5036/nref11c_nref9f snapshots DD0272-DD2520, RD0015-RD0042
4123/nref11c_nref9f snapshots DD0355-DD1599, RD0016-RD0029
2392/nref11c_nref9f snapshots DD0511-DD1499, RD0019-RD0031
2878/nref11c_nref9f snapshots DD0398-DD0799, RD0016-RD0022

Created by:
utils/get_rvir.py
        use as e.g., python get_rvir.py --halo 8508 --use_catalog_profile
Author:
Raymond (04/23/20), using Cassi's mass profile catalogs "masses_z-gtr-2.hdf5 and masses_z-less-2.hdf5"
