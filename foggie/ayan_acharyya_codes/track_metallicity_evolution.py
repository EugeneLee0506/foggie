##!/usr/bin/env python3

"""

    Title :      track_metallicity_evolution
    Notes :      To TRACK ambient gas metallicity around young (< 10Myr) stars as function of redshift, write to file, and plot
    Input :      txt file with all young star properties for each snapshot of each halo (generated by filter_star_properties.py)
    Output :     One pandas dataframe per halo as a txt file (Or fits file?)
    Author :     Ayan Acharyya
    Started :    July 2021
    Example :    run track_metallicity_evolution.py --system ayan_hd --halo 8508

"""
from header import *
from util import *

# ----------------------------------------------------------------------------------
def read_metallicity(args):
    '''
    Function to read in the properties of young stars and select the metallicity column
    :return: dataframe (and writes dataframe as ASCII file too
    '''
    infilename = args.output_dir + 'txtfiles/' + args.output + '_young_star_properties.txt'

    # ----------------------Reading in simulation data-------------------------------------------
    if not os.path.exists(infilename):
        myprint(infilename + 'does not exist. Call filter_star_properties.py first..', args)
        sys.exit()
    else:
        paramlist = pd.read_table(infilename, delim_whitespace=True, comment='#')
        Z_arr = paramlist['gas_metal']

    return Z_arr

# -----------------------------------------------------------------------------------
if __name__ == '__main__':
    start_time = time.time()

    dummy_args = parse_args('8508', 'RD0042')
    if type(dummy_args) is tuple: dummy_args = dummy_args[0] # if the sim has already been loaded in, in order to compute the box center (via utils.pull_halo_center()), then no need to do it again

    if dummy_args.do_all_sims: list_of_sims = get_all_sims(dummy_args)
    else: list_of_sims = get_all_sims_for_this_halo(dummy_args)

    for this_sim in list_of_sims:
        args = parse_args(this_sim[0], this_sim[1])
        if type(args) is tuple:
            args, ds, refine_box = args  # if the sim has already been loaded in, in order to compute the box center (via utils.pull_halo_center()), then no need to do it again
            myprint('ds ' + str(ds) + ' for halo ' + str(this_sim[0]) + ' was already loaded at some point by utils; using that loaded ds henceforth', args)

        Z_arr = read_metallicity(args)
        z = pull_halo_redshift(args)
        if len(z) == 0: z = ds.redshift # if this snapshot is not yet in the halo catalog

        paramlist = get_star_properties(args)

    myprint('All sims done in %s minutes' % ((time.time() - start_time) / 60), args)
